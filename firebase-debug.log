[debug] [2024-12-13T18:00:36.664Z] ----------------------------------------------------------------------
[debug] [2024-12-13T18:00:36.665Z] Command:       /opt/homebrew/Cellar/node/22.9.0/bin/node /Users/fredzqm/dev/firebase-tools/lib/bin/firebase.js deploy --debug
[debug] [2024-12-13T18:00:36.666Z] CLI Version:   13.29.0
[debug] [2024-12-13T18:00:36.666Z] Platform:      darwin
[debug] [2024-12-13T18:00:36.666Z] Node Version:  v22.9.0
[debug] [2024-12-13T18:00:36.666Z] Time:          Fri Dec 13 2024 10:00:36 GMT-0800 (Pacific Standard Time)
[debug] [2024-12-13T18:00:36.666Z] ----------------------------------------------------------------------
[debug] 
[debug] [2024-12-13T18:00:36.700Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2024-12-13T18:00:36.700Z] > authorizing via signed-in user (fredzqm@google.com)
[debug] [2024-12-13T18:00:36.700Z] [iam] checking project fredzqm-staging for permissions ["cloudsql.databases.create","cloudsql.databases.update","cloudsql.instances.connect","cloudsql.instances.create","cloudsql.instances.get","cloudsql.instances.list","cloudsql.instances.update","cloudsql.users.create","firebase.projects.get","firebasedataconnect.connectors.create","firebasedataconnect.connectors.delete","firebasedataconnect.connectors.list","firebasedataconnect.connectors.update","firebasedataconnect.operations.get","firebasedataconnect.schemas.create","firebasedataconnect.schemas.delete","firebasedataconnect.schemas.list","firebasedataconnect.schemas.update","firebasedataconnect.services.create","firebasedataconnect.services.delete","firebasedataconnect.services.list","firebasedataconnect.services.update"]
[debug] [2024-12-13T18:00:36.701Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:36.701Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:36.702Z] >>> [apiv2][query] POST https://cloudresourcemanager.googleapis.com/v1/projects/fredzqm-staging:testIamPermissions [none]
[debug] [2024-12-13T18:00:36.702Z] >>> [apiv2][(partial)header] POST https://cloudresourcemanager.googleapis.com/v1/projects/fredzqm-staging:testIamPermissions x-goog-quota-user=projects/fredzqm-staging
[debug] [2024-12-13T18:00:36.702Z] >>> [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/fredzqm-staging:testIamPermissions {"permissions":["cloudsql.databases.create","cloudsql.databases.update","cloudsql.instances.connect","cloudsql.instances.create","cloudsql.instances.get","cloudsql.instances.list","cloudsql.instances.update","cloudsql.users.create","firebase.projects.get","firebasedataconnect.connectors.create","firebasedataconnect.connectors.delete","firebasedataconnect.connectors.list","firebasedataconnect.connectors.update","firebasedataconnect.operations.get","firebasedataconnect.schemas.create","firebasedataconnect.schemas.delete","firebasedataconnect.schemas.list","firebasedataconnect.schemas.update","firebasedataconnect.services.create","firebasedataconnect.services.delete","firebasedataconnect.services.list","firebasedataconnect.services.update"]}
[debug] [2024-12-13T18:00:36.851Z] <<< [apiv2][status] POST https://cloudresourcemanager.googleapis.com/v1/projects/fredzqm-staging:testIamPermissions 200
[debug] [2024-12-13T18:00:36.852Z] <<< [apiv2][body] POST https://cloudresourcemanager.googleapis.com/v1/projects/fredzqm-staging:testIamPermissions {"permissions":["cloudsql.databases.create","cloudsql.databases.update","cloudsql.instances.connect","cloudsql.instances.create","cloudsql.instances.get","cloudsql.instances.list","cloudsql.instances.update","cloudsql.users.create","firebase.projects.get","firebasedataconnect.connectors.create","firebasedataconnect.connectors.delete","firebasedataconnect.connectors.list","firebasedataconnect.connectors.update","firebasedataconnect.operations.get","firebasedataconnect.schemas.create","firebasedataconnect.schemas.delete","firebasedataconnect.schemas.list","firebasedataconnect.schemas.update","firebasedataconnect.services.create","firebasedataconnect.services.delete","firebasedataconnect.services.list","firebasedataconnect.services.update"]}
[info] 
[info] === Deploying to 'fredzqm-staging'...
[info] 
[info] i  deploying dataconnect 
[debug] [2024-12-13T18:00:36.853Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:36.853Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:36.853Z] >>> [apiv2][query] GET https://cloudbilling.googleapis.com/v1/projects/fredzqm-staging/billingInfo [none]
[debug] [2024-12-13T18:00:37.311Z] <<< [apiv2][status] GET https://cloudbilling.googleapis.com/v1/projects/fredzqm-staging/billingInfo 200
[debug] [2024-12-13T18:00:37.311Z] <<< [apiv2][body] GET https://cloudbilling.googleapis.com/v1/projects/fredzqm-staging/billingInfo {"name":"projects/fredzqm-staging/billingInfo","projectId":"fredzqm-staging","billingAccountName":"billingAccounts/014AB8-8E378E-204969","billingEnabled":true}
[info] i  dataconnect: ensuring required API firebasedataconnect.googleapis.com is enabled... 
[debug] [2024-12-13T18:00:37.312Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:37.313Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:37.313Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/firebasedataconnect.googleapis.com [none]
[debug] [2024-12-13T18:00:37.313Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/firebasedataconnect.googleapis.com x-goog-quota-user=projects/fredzqm-staging
[debug] [2024-12-13T18:00:37.670Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/firebasedataconnect.googleapis.com 200
[debug] [2024-12-13T18:00:37.670Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/firebasedataconnect.googleapis.com [omitted]
[info] ✔  dataconnect: required API firebasedataconnect.googleapis.com is enabled 
[info] i  dataconnect: ensuring required API sqladmin.googleapis.com is enabled... 
[debug] [2024-12-13T18:00:37.672Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:37.672Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:37.672Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/sqladmin.googleapis.com [none]
[debug] [2024-12-13T18:00:37.672Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/sqladmin.googleapis.com x-goog-quota-user=projects/fredzqm-staging
[debug] [2024-12-13T18:00:38.026Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/sqladmin.googleapis.com 200
[debug] [2024-12-13T18:00:38.026Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/sqladmin.googleapis.com [omitted]
[info] ✔  dataconnect: required API sqladmin.googleapis.com is enabled 
[info] i  dataconnect: ensuring required API compute.googleapis.com is enabled... 
[debug] [2024-12-13T18:00:38.026Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.027Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.027Z] >>> [apiv2][query] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/compute.googleapis.com [none]
[debug] [2024-12-13T18:00:38.027Z] >>> [apiv2][(partial)header] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/compute.googleapis.com x-goog-quota-user=projects/fredzqm-staging
[debug] [2024-12-13T18:00:38.341Z] <<< [apiv2][status] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/compute.googleapis.com 200
[debug] [2024-12-13T18:00:38.341Z] <<< [apiv2][body] GET https://serviceusage.googleapis.com/v1/projects/fredzqm-staging/services/compute.googleapis.com [omitted]
[info] ✔  dataconnect: required API compute.googleapis.com is enabled 
[debug] [2024-12-13T18:00:38.341Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.341Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.341Z] >>> [apiv2][query] GET https://mobilesdk-pa.googleapis.com/v1/accessmanagement/tos:getStatus [none]
[debug] [2024-12-13T18:00:38.535Z] <<< [apiv2][status] GET https://mobilesdk-pa.googleapis.com/v1/accessmanagement/tos:getStatus 200
[debug] [2024-12-13T18:00:38.535Z] <<< [apiv2][body] GET https://mobilesdk-pa.googleapis.com/v1/accessmanagement/tos:getStatus {"overallStatus":"ACCEPTED","uTosStatus":{"tos":{"id":"firebase","tosId":"FIREBASE_UNIVERSAL"},"status":"ACCEPTED"},"childTosStatus":[{"tos":{"id":"cloud","tosId":"CLOUD_PLATFORM"},"status":"ACCEPTED"},{"tos":{"id":"firebase_b2b","tosId":"FIREBASE_B2B"},"status":"ACCEPTED"},{"tos":{"id":"universal","tosId":"GOOGLE_APIS"},"status":"ACCEPTED"}],"termsUrl":"https://firebase.google.com/terms","perServiceStatus":[{"tosId":"APP_CHECK","serviceStatus":{"tos":{"id":"app_check","tosId":"APP_CHECK"},"status":"ACCEPTED"}},{"tosId":"APP_HOSTING_TOS","serviceStatus":{"tos":{"id":"app_hosting","tosId":"APP_HOSTING_TOS"},"status":"ACCEPTED"}},{"tosId":"FIREBASE_DATA_CONNECT","serviceStatus":{"tos":{"id":"data_connect","tosId":"FIREBASE_DATA_CONNECT"},"status":"ACCEPTED"}},{"tosId":"CORE_APPS","serviceStatus":{"tos":{"id":"core_apps","tosId":"CORE_APPS"},"status":"ACCEPTED"}},{"tosId":"VERTEX_AI_IN_FIREBASE","serviceStatus":{"tos":{"id":"vertex_ai_in_firebase","tosId":"VERTEX_AI_IN_FIREBASE"},"status":"TERMS_UPDATED"}},{"tosId":"FIREBASE_CRASHLYTICS_APP_DISTRIBUTION","serviceStatus":{"tos":{"id":"firebase_crashlytics_app_distribution","tosId":"FIREBASE_CRASHLYTICS_APP_DISTRIBUTION"},"status":"ACCEPTED"}},{"tosId":"GENERATIVE_LANGUAGE","serviceStatus":{"tos":{"id":"generative-language-api","tosId":"GENERATIVE_LANGUAGE"},"status":"ACCEPTED"}}]}
[info] i  dataconnect: Preparing to deploy 
[debug] [2024-12-13T18:00:38.765Z] I1213 10:00:38.755485   22200 control.go:45] [engine.Service /emulator/apphosting-onboard-2 4146] UpdateSchema(): done sources: schema/schema.gql [1384B] 
I1213 10:00:38.762371   22200 control.go:73] [engine.Service /emulator/apphosting-onboard-2 4146] UpdateConnector(default): done sources: connector/mutations.gql [1163B] connector/queries.gql [1855B] 
 {"metadata":{"emulator":{"name":"dataconnect"},"message":"I1213 10:00:38.755485   22200 control.go:45] [engine.Service /emulator/apphosting-onboard-2 4146] UpdateSchema(): done sources: schema/schema.gql [1384B] \nI1213 10:00:38.762371   22200 control.go:73] [engine.Service /emulator/apphosting-onboard-2 4146] UpdateConnector(default): done sources: connector/mutations.gql [1163B] connector/queries.gql [1855B] \n"}}
[info] i  dataconnect: Successfully prepared schema and connectors 
[debug] [2024-12-13T18:00:38.765Z] {
  "serviceInfos": [
    {
      "serviceName": "projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2",
      "sourceDirectory": "/Users/fredzqm/dev/apphosting-onboard/dataconnect",
      "schema": {
        "name": "projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main",
        "datasources": [
          {
            "postgresql": {
              "database": "postgres",
              "cloudSql": {
                "instance": "projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"
              }
            }
          }
        ],
        "source": {
          "files": [
            {
              "path": "schema.gql",
              "content": "# # Example schema for simple movie review app\n\n# # Users\n# # Suppose a user can leave reviews for movies\n# # user  -> reviews is a one to many relationship,\n# # movie -> reviews is a one to many relationship\n# # movie <-> user is a many to many relationship\n# type User @table {\n#   id: String! @col(name: \"user_auth\")\n#   username: String! @col(name: \"username\", dataType: \"varchar(50)\")\n#   # The following are generated by the user: User! field in the Review table\n#   # reviews_on_user \n#   # movies_via_Review\n# }\n\n# # Movies\n# type Movie @table {\n#   # The below parameter values are generated by default with @table, and can be edited manually.\n#   # implies directive `@col(name: \"movie_id\")`, generating a column name\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   title: String!\n#   imageUrl: String!\n#   genre: String\n# }\n\n# # Movie Metadata\n# # Movie - MovieMetadata is a one-to-one relationship\n# type MovieMetadata @table {\n#   # @unique indicates a 1-1 relationship\n#   movie: Movie! @unique \n#   # movieId: UUID <- this is created by the above reference\n#   rating: Float\n#   releaseYear: Int\n#   description: String\n# }\n\n# # Reviews\n# type Review @table(name: \"Reviews\", key: [\"movie\", \"user\"]) {\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   user: User!\n#   movie: Movie!\n#   rating: Int\n#   reviewText: String\n#   reviewDate: Date! @default(expr: \"request.time\")\n# }\n"
            }
          ]
        }
      },
      "dataConnectYaml": {
        "specVersion": "v1beta",
        "serviceId": "apphosting-onboard-2",
        "location": "us-central1",
        "schema": {
          "source": "./schema",
          "datasource": {
            "postgresql": {
              "database": "postgres",
              "cloudSql": {
                "instanceId": "fdc-sql"
              }
            }
          }
        },
        "connectorDirs": [
          "./connector"
        ]
      },
      "connectorInfo": [
        {
          "directory": "/Users/fredzqm/dev/apphosting-onboard/dataconnect/connector",
          "connectorYaml": {
            "connectorId": "default",
            "generate": {
              "javascriptSdk": {
                "outputDir": "../../dataconnect-generated/js/default-connector",
                "package": "@firebasegen/default-connector",
                "packageJsonDir": "../.."
              }
            }
          },
          "connector": {
            "name": "projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default",
            "source": {
              "files": [
                {
                  "path": "mutations.gql",
                  "content": "# # Example mutations for a simple movie app\n\n# # Create a movie based on user input\n# mutation CreateMovie(\n#   $title: String!\n#   $genre: String!\n#   $imageUrl: String!\n# ) @auth(level: USER_EMAIL_VERIFIED) {\n#   movie_insert(\n#     data: {\n#       title: $title\n#       genre: $genre\n#       imageUrl: $imageUrl\n#     }\n#   )\n# }\n\n# # Upsert (update or insert) a user's username based on their auth.uid\n# mutation UpsertUser($username: String!) @auth(level: USER) {\n#   user_upsert(\n#     data: {\n#       id_expr: \"auth.uid\"\n#       username: $username\n#     }\n#   )\n# }\n\n# # Add a review for a movie\n# mutation AddReview(\n#   $movieId: UUID!\n#   $rating: Int!\n#   $reviewText: String!\n# ) @auth(level: USER) {\n#   review_upsert(\n#     data: {\n#       userId_expr: \"auth.uid\"\n#       movieId: $movieId\n#       rating: $rating\n#       reviewText: $reviewText\n#       # reviewDate defaults to today in the schema. No need to set it manually.\n#     }\n#   )\n# }\n\n# # Logged in user can delete their review for a movie\n# mutation DeleteReview(\n#   $movieId: UUID!\n# ) @auth(level: USER) {\n#   review_delete(key: { userId_expr: \"auth.uid\", movieId: $movieId })\n# }\n"
                },
                {
                  "path": "queries.gql",
                  "content": "# # Example queries for a simple movie app.\n\n# # @auth() directives control who can call each operation.\n# # Anyone should be able to list all movies, so the auth level is set to PUBLIC\n# query ListMovies @auth(level: PUBLIC) {\n#   movies {\n#     id\n#     title\n#     imageUrl\n#     genre\n#   }\n# }\n\n# # List all users, only admins should be able to list all users, so we use NO_ACCESS\n# query ListUsers @auth(level: NO_ACCESS) {\n#   users { id, username }\n# }\n\n# # Logged in user can list all their reviews and movie titles associated with the review \n# # Since the query requires the uid of the current authenticated user, the auth level is set to USER\n# query ListUserReviews @auth(level: USER) {\n#   user(key: {id_expr: \"auth.uid\"}) {\n#     id\n#     username\n#     # <field>_on_<foreign_key_field> makes it easy to grab info from another table\n#     # Here, we use it to grab all the reviews written by the user.\n#     reviews: reviews_on_user {\n#       id\n#       rating\n#       reviewDate\n#       reviewText\n#       movie {\n#         id\n#         title\n#       }\n#     }\n#   }\n# }\n\n# # Get movie by id\n# query GetMovieById($id: UUID!) @auth(level: PUBLIC) {\n#   movie(id: $id) {\n#     id\n#     title\n#     imageUrl\n#     genre\n#     metadata: movieMetadata_on_movie {\n#       rating\n#       releaseYear\n#       description\n#     }\n#     reviews: reviews_on_movie {\n#       id\n#       reviewText\n#       reviewDate\n#       rating\n#       user {\n#         id\n#         username\n#       }\n#     }\n#   }\n# }\n\n# # Search for movies, actors, and reviews\n# query SearchMovie(\n#   $titleInput: String\n#   $genre: String\n# ) @auth(level: PUBLIC) {\n#   movies(\n#     where: {\n#       _and: [\n#         { genre: { eq: $genre } }\n#         { title: { contains: $titleInput } }\n#       ]\n#     }\n#   ) {\n#     id\n#     title\n#     genre\n#     imageUrl\n#   }\n# }\n"
                }
              ]
            }
          }
        }
      ],
      "deploymentMetadata": {
        "primaryDataSource": {
          "postgres": {
            "requiredExtensions": null
          }
        }
      }
    }
  ]
}
[debug] [2024-12-13T18:00:38.766Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.766Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:38.766Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/-/services [none]
[debug] [2024-12-13T18:00:39.375Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/-/services 200
[debug] [2024-12-13T18:00:39.375Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/-/services {"services":[{"name":"projects/fredzqm-staging/locations/us-central1/services/fdc-free","createTime":"2024-10-06T02:45:37.504504563Z","updateTime":"2024-10-06T02:45:37.564548963Z","uid":"66d6d88c-8eab-4ce5-9b58-b004087a6ce7","reconciling":false,"etag":"gC0wig2FkCpv0GDQyGmfaE5W8bwM2OGaPbnbmXz6EOQ"},{"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard","createTime":"2024-12-13T17:56:11.469333051Z","updateTime":"2024-12-13T17:56:11.572901173Z","uid":"916d5617-cc4a-4567-92d4-de07eb4bef95","reconciling":false,"etag":"o5vfyJkzOolJsQAJd6ubsqijcMwGGRBbFO2OJG4OmFY"},{"name":"projects/fredzqm-staging/locations/us-central1/services/cli-e2e-service-nhae33","createTime":"2024-09-23T22:46:43.740810810Z","updateTime":"2024-09-23T22:46:43.793508018Z","uid":"720b2516-c6c6-4e52-9218-e2bb9df69741","reconciling":false,"etag":"XLPBUroxN3O5wciL7cKDmKvmZW0e3b9BBVnzERTXJtk"},{"name":"projects/fredzqm-staging/locations/us-central1/services/my-service","createTime":"2024-09-16T13:52:45.330032018Z","updateTime":"2024-09-16T13:52:45.431054639Z","uid":"9b4af8e1-6f9f-44fb-a3fe-aac50e9373bd","reconciling":false,"etag":"oQzi9UuD5jSxTk7m5bdCF0PF2JMV31bX8VVAJ-fw2xQ"},{"name":"projects/fredzqm-staging/locations/us-central1/services/fdc_free","createTime":"2024-09-23T19:05:50.877789577Z","updateTime":"2024-09-23T19:05:51.137559063Z","uid":"d946ba60-982f-40bd-8193-bb2cb3bf11e3","reconciling":false,"etag":"dA84A2E__OoTraIiZ2BgrSnUhvRyksnXyVeuMxFJVHE"}]}
[debug] [2024-12-13T18:00:39.376Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:39.376Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:39.376Z] >>> [apiv2][query] POST https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services service_id=apphosting-onboard-2
[debug] [2024-12-13T18:00:39.376Z] >>> [apiv2][body] POST https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services {"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2"}
[debug] [2024-12-13T18:00:39.716Z] <<< [apiv2][status] POST https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services 200
[debug] [2024-12-13T18:00:39.716Z] <<< [apiv2][body] POST https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112839727-6292a9bcffb25-322a1150-17e2082c","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:39.735902778Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2","verb":"create","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:39.718Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:39.718Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:39.718Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112839727-6292a9bcffb25-322a1150-17e2082c [none]
[debug] [2024-12-13T18:00:40.002Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112839727-6292a9bcffb25-322a1150-17e2082c 200
[debug] [2024-12-13T18:00:40.003Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112839727-6292a9bcffb25-322a1150-17e2082c {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112839727-6292a9bcffb25-322a1150-17e2082c","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:39.735902778Z","endTime":"2024-12-13T18:00:39.768238714Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2","verb":"create","requestedCancellation":false,"apiVersion":"v1beta"},"done":true,"response":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.Service","name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2","createTime":"2024-12-13T18:00:39.732434488Z","updateTime":"2024-12-13T18:00:39.732434488Z","uid":"dbbc3c45-13ea-4dc9-854b-2a540983009a","reconciling":false,"etag":"MK9LV32bYDfidfQSct2rzSNGAipYL82r9tZygf4LhyY"}}
[info] ✔  dataconnect: Created service projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2 
[warn] ⚠  dataconnect: The following services exist on fredzqm-staging but are not listed in your 'firebase.json'
projects/fredzqm-staging/locations/us-central1/services/fdc-free
projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard
projects/fredzqm-staging/locations/us-central1/services/cli-e2e-service-nhae33
projects/fredzqm-staging/locations/us-central1/services/my-service
projects/fredzqm-staging/locations/us-central1/services/fdc_free
Consider deleting these via the Firebase console if they are no longer needed. 
[info] i  dataconnect: Checking for CloudSQL resources... 
[debug] [2024-12-13T18:00:40.005Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.005Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.006Z] >>> [apiv2][query] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql [none]
[debug] [2024-12-13T18:00:40.321Z] <<< [apiv2][status] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql 200
[debug] [2024-12-13T18:00:40.322Z] <<< [apiv2][body] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql {"kind":"sql#instance","state":"RUNNABLE","databaseVersion":"POSTGRES_15","settings":{"authorizedGaeApplications":[],"tier":"db-f1-micro","kind":"sql#settings","userLabels":{"firebase-data-connect":"ft"},"availabilityType":"ZONAL","pricingPlan":"PER_USE","replicationType":"SYNCHRONOUS","activationPolicy":"ALWAYS","ipConfiguration":{"authorizedNetworks":[],"sslMode":"ALLOW_UNENCRYPTED_AND_ENCRYPTED","ipv4Enabled":true,"requireSsl":false,"serverCaMode":"GOOGLE_MANAGED_INTERNAL_CA"},"locationPreference":{"zone":"us-central1-c","kind":"sql#locationPreference"},"databaseFlags":[{"name":"cloudsql.iam_authentication","value":"on"}],"dataDiskType":"PD_SSD","backupConfiguration":{"startTime":"18:00","kind":"sql#backupConfiguration","backupRetentionSettings":{"retentionUnit":"COUNT","retainedBackups":7},"enabled":false,"transactionLogRetentionDays":7,"transactionalLogStorageState":"TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED"},"insightsConfig":{"queryInsightsEnabled":true,"queryStringLength":1024,"queryPlansPerMinute":5},"edition":"ENTERPRISE","connectorEnforcement":"NOT_REQUIRED","settingsVersion":"19","storageAutoResizeLimit":"0","storageAutoResize":false,"dataDiskSizeGb":"10","deletionProtectionEnabled":false,"enableGoogleMlIntegration":false},"etag":"8658d8d84c1fe9d5e5b7c91bfd880a242566f74d05ffb5be3aa3c1ce16ecee56","ipAddresses":[{"type":"PRIMARY","ipAddress":"34.70.75.172"},{"type":"OUTGOING","ipAddress":"104.198.32.246"}],"serverCaCert":{"kind":"sql#sslCert","certSerialNumber":"0","cert":"-----BEGIN CERTIFICATE-----\nMIIDfzCCAmegAwIBAgIBADANBgkqhkiG9w0BAQsFADB3MS0wKwYDVQQuEyRmNGRm\nYTU1ZC0wN2ViLTRkMTgtOWM5MS1jMDg4MzdjYWM4N2ExIzAhBgNVBAMTGkdvb2ds\nZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUsIEluYzELMAkG\nA1UEBhMCVVMwHhcNMjQwOTE1MDIyNjAyWhcNMzQwOTEzMDIyNzAyWjB3MS0wKwYD\nVQQuEyRmNGRmYTU1ZC0wN2ViLTRkMTgtOWM5MS1jMDg4MzdjYWM4N2ExIzAhBgNV\nBAMTGkdvb2dsZSBDbG91ZCBTUUwgU2VydmVyIENBMRQwEgYDVQQKEwtHb29nbGUs\nIEluYzELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB\nAQCLxk62ALFMg5XZm1abZp4nOZjOT6eZVdwJLTt/pql98MmSknssc71N/BroXxRq\nh00LK6mcFp0JTGre7c9fXaNLFw4DUxy6aSRJDWw6YM/0d/DcumUaW2C2PN19dQhb\nhTV6/Xj6IucAmLCFDmsSuMHeQxF0XPuhjervj//X7KxPv83wJwaHa9RNWdFvjkkF\nuszBZw1J8t9qn+dkk9rIDboGT+fkhGhHPy062l6j5e0PdXZoJ9eF46ZAwVVTmN4n\nlSYDkJGJuDUFDWSiJdMZUIhXurHtiMskht7OKzhRDhL49WsJqBlbgq+0jds/haUz\nJg5gxc8xeZ111Lm3mpF8O3W7AgMBAAGjFjAUMBIGA1UdEwEB/wQIMAYBAf8CAQAw\nDQYJKoZIhvcNAQELBQADggEBAFAUfRBz3xNzP8nBGyHbVTN3TDSV+UKdSmVXyxHX\nPgliqEsNDASVH13WWXSS83S2EdiGyeim+QJuyIM/8j8CKSDfY5BFfX5Ubwq1J+/O\nsthS5EsZcjMneFd0xybdYASiObPWWFE3rYkpe5xNgv2a1G7g/mxwrlJ23SypE3aY\nnF2WynWUclxGJw0mh6DpE2Mc6N9zUhh1+e+eTMtAhmGFeCkk3MAICMV6N2WxEftO\nyiCwGbd0wTbiYPGyK0OcRqMR3wjDPMZGyZYqiWMmjfsjTilqg4UoGep2xKzjQxe0\nl+iHxrs4Bazxtp+wK5Ee3RMyfCs6M1t5cHg6sYZdu6cI2x8=\n-----END CERTIFICATE-----","commonName":"C=US,O=Google\\, Inc,CN=Google Cloud SQL Server CA,dnQualifier=f4dfa55d-07eb-4d18-9c91-c08837cac87a","sha1Fingerprint":"e90e01a681b6304a9da7478aac894983009fbd8a","instance":"fdc-sql","createTime":"2024-09-15T02:26:02.438Z","expirationTime":"2034-09-13T02:27:02.438Z"},"instanceType":"CLOUD_SQL_INSTANCE","project":"fredzqm-staging","serviceAccountEmailAddress":"p435410221340-9sisd7@gcp-sa-cloud-sql.iam.gserviceaccount.com","backendType":"SECOND_GEN","selfLink":"https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql","connectionName":"fredzqm-staging:us-central1:fdc-sql","name":"fdc-sql","region":"us-central1","gceZone":"us-central1-a","databaseInstalledVersion":"POSTGRES_15_8","availableMaintenanceVersions":["POSTGRES_15_8.R20240910.01_17"],"maintenanceVersion":"POSTGRES_15_8.R20240910.01_02","createTime":"2024-09-15T02:26:10.822Z","sqlNetworkArchitecture":"NEW_NETWORK_ARCHITECTURE","satisfiesPzi":false}
[info] i  dataconnect: Found existing instance fdc-sql. 
[debug] [2024-12-13T18:00:40.322Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.323Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.323Z] >>> [apiv2][query] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql/databases/postgres [none]
[debug] [2024-12-13T18:00:40.674Z] <<< [apiv2][status] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql/databases/postgres 200
[debug] [2024-12-13T18:00:40.674Z] <<< [apiv2][body] GET https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql/databases/postgres {"kind":"sql#database","charset":"UTF8","collation":"en_US.UTF8","etag":"edf9f03492867cc83338c52d1e1c92bca4a9a953c9613ad87a7e63430e8292d6","name":"postgres","instance":"fdc-sql","selfLink":"https://sqladmin.googleapis.com/v1/projects/fredzqm-staging/instances/fdc-sql/databases/postgres","project":"fredzqm-staging"}
[info] i  dataconnect: Found existing database postgres. 
[info] i  dataconnect: Deploying Data Connect schemas... 
[debug] [2024-12-13T18:00:40.677Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.677Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.677Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main [none]
[debug] [2024-12-13T18:00:40.816Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main 404
[debug] [2024-12-13T18:00:40.817Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"error":{"code":404,"message":"Resource 'projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main' was not found","status":"NOT_FOUND","details":[{"@type":"type.googleapis.com/google.rpc.DebugInfo","stackEntries":["cloud/control2/shared/userfriendly/userfriendly.go:1152 +0x25 google3/cloud/control2/shared/userfriendly/userfriendly.DebugInfoWithMessage({0xc0024e8740, 0x1d})","cloud/control2/shared/userfriendly/userfriendly.go:1147 +0x2b google3/cloud/control2/shared/userfriendly/userfriendly.debugInfoWithError({0x55df631e0678?, 0xc003d98d60?})","cloud/control2/shared/userfriendly/userfriendly.go:549 +0xc5 google3/cloud/control2/shared/userfriendly/userfriendly.NotFound({0x55df63346520, 0xc016e8ef60}, {0x55df571fb770, 0x10}, {0xc019686840, 0x59}, {0x55df631e0678, 0xc003d98d60})","cloud/control2/frontend/userfriendly/userfriendly_store.go:65 +0x4a5 google3/cloud/control2/frontend/userfriendly/userfriendlystore.ResourceErrorToUserFriendly({0x55df63346520, 0xc016e8ef60}, 0xc010d90e00, {0x55df631e0678, 0xc003d98d60})","cloud/control2/frontend/handler/readonly.go:264 +0x1526 google3/cloud/control2/frontend/handler/handler.Handler.handleGet({{{0x55df6334dff0, 0xc0028c4dc0}, {0x0, 0x0}}, {{0xc0088a0b10, 0x1, 0x1}, 0xc0054f8c60, 0xc0088a0b00, {0x55df63358280, ...}, ...}, ...}, ...)","cloud/control2/frontend/handler/handler.go:369 +0xde5 google3/cloud/control2/frontend/handler/handler.Handler.Start({{{0x55df6334dff0, 0xc0028c4dc0}, {0x0, 0x0}}, {{0xc0088a0b10, 0x1, 0x1}, 0xc0054f8c60, 0xc0088a0b00, {0x55df63358280, ...}, ...}, ...}, ...)","cloud/control2/frontend/handler/handler.go:253 +0x5e google3/cloud/control2/frontend/handler/handler.init.func2({_, _}, {{{0x55df6334dff0, 0xc0028c4dc0}, {0x0, 0x0}}, {{0xc0088a0b10, 0x1, 0x1}, 0xc0054f8c60, ...}, ...}, ...)","cloud/control2/frontend/handler/handler.go:249 google3/cloud/control2/frontend/handler/handler.Handler.HandleRequest(...)","cloud/control2/frontend/server/request_handler.go:111 +0x603 google3/cloud/control2/frontend/server/requesthandler.(*Handler).handleRequestWithFullMethodName(0xc007346480, {0x55df63346520, 0xc00277b5f0}, 0xc01333d8c0, 0xc01516a060, 0xc01516a4e0, {0xc008563030?, 0x55df60a11540?})","cloud/control2/frontend/server/request_handler.go:84 +0x516 google3/cloud/control2/frontend/server/requesthandler.(*Handler).handleRequest(0xc007346480, {0x55df63346520, 0xc00277b5f0}, 0xc01516a060, 0xc01516a4e0)","cloud/control2/frontend/server/request_handler.go:53 +0x25 google3/cloud/control2/frontend/server/requesthandler.(*Handler).handle(0xc009bcd008?, {0x55df63346520, 0xc00277b5f0}, 0x55df60e6ea20?, 0xc0054a8701?)","cloud/control2/shared/genericrpc/service.go:172 +0x3e5 google3/cloud/control2/shared/genericrpc/genericrpc.(*Dispatcher).DefaultMethodHandler(0xc005777e90, {0x55df63346520, 0xc00277b5f0}, 0xc01516a060)","net/rpc/go/stream.go:1103 +0x43 google3/net/rpc/go/rpc.runStreamHandler({0x55df63346520?, 0xc00277b5f0?}, 0xc01516a060?, {0x0?, 0x0?}, {0x55df633571b0, 0xc01850ca00})","net/goa/rpc/rpchandler.go:100 +0x4d7 google3/net/goa/rpc/rpchandler.ExecHandlerSubset({0x55df63346520?, 0xc0088aec00?}, 0xc017a875c8)","net/goa/rpc/rpchandler.go:327 +0x9ce google3/net/goa/rpc/rpchandler.(*closedRegistry).hook(0xc00c242e60, {0x55df633466e0, 0xc017f78300}, 0xc010d90680)","production/fireaxe/go/filters/rpcserverinterceptor.go:62 +0x2f2 google3/production/fireaxe/go/filters/rpcserverinterceptor.(*Interceptor).MakeHook-fm.(*Interceptor).MakeHook.func2({0x55df633466e0, 0xc017f78300}, 0xc010d90680)"],"detail":"not found: resource not found"},{"@type":"type.googleapis.com/google.rpc.ResourceInfo","resourceName":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main"}]}}
[info] i  dataconnect: Linking the Cloud SQL instance... 
[debug] [2024-12-13T18:00:40.820Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.820Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:40.821Z] >>> [apiv2][query] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main allowMissing=true&validateOnly=false
[debug] [2024-12-13T18:00:40.821Z] >>> [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","source":{"files":[]},"datasources":[{"postgresql":{"database":"postgres","schemaValidation":"STRICT","cloudSql":{"instance":"projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"}}}]}
[debug] [2024-12-13T18:00:41.296Z] <<< [apiv2][status] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main 200
[debug] [2024-12-13T18:00:41.296Z] <<< [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:41.308705141Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:41.297Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.297Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.297Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 [none]
[debug] [2024-12-13T18:00:41.367Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 200
[debug] [2024-12-13T18:00:41.368Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:41.308705141Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:41.869Z] [LRO Poller] Retrying task index 0
[debug] [2024-12-13T18:00:41.869Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.870Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.870Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 [none]
[debug] [2024-12-13T18:00:41.946Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 200
[debug] [2024-12-13T18:00:41.947Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2 {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112840942-6292a9be283bb-94709f61-2debdaf2","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:41.308705141Z","endTime":"2024-12-13T18:00:41.860904803Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":true,"response":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.Schema","name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","createTime":"2024-12-13T18:00:41.301597760Z","updateTime":"2024-12-13T18:00:41.301597760Z","uid":"bad3ca36-4351-40f8-adf0-435dd972f13c","reconciling":false,"etag":"SbhdHqm4zgJ6d-CPqoQ1z04WXU0XxCMbXiHwJ-9ULs8"}}
[debug] [2024-12-13T18:00:41.948Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.948Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:41.948Z] >>> [apiv2][query] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main allowMissing=true&validateOnly=false
[debug] [2024-12-13T18:00:41.948Z] >>> [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","datasources":[{"postgresql":{"database":"postgres","cloudSql":{"instance":"projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"},"schemaValidation":"COMPATIBLE"}}],"source":{"files":[{"path":"schema.gql","content":"# # Example schema for simple movie review app\n\n# # Users\n# # Suppose a user can leave reviews for movies\n# # user  -> reviews is a one to many relationship,\n# # movie -> reviews is a one to many relationship\n# # movie <-> user is a many to many relationship\n# type User @table {\n#   id: String! @col(name: \"user_auth\")\n#   username: String! @col(name: \"username\", dataType: \"varchar(50)\")\n#   # The following are generated by the user: User! field in the Review table\n#   # reviews_on_user \n#   # movies_via_Review\n# }\n\n# # Movies\n# type Movie @table {\n#   # The below parameter values are generated by default with @table, and can be edited manually.\n#   # implies directive `@col(name: \"movie_id\")`, generating a column name\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   title: String!\n#   imageUrl: String!\n#   genre: String\n# }\n\n# # Movie Metadata\n# # Movie - MovieMetadata is a one-to-one relationship\n# type MovieMetadata @table {\n#   # @unique indicates a 1-1 relationship\n#   movie: Movie! @unique \n#   # movieId: UUID <- this is created by the above reference\n#   rating: Float\n#   releaseYear: Int\n#   description: String\n# }\n\n# # Reviews\n# type Review @table(name: \"Reviews\", key: [\"movie\", \"user\"]) {\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   user: User!\n#   movie: Movie!\n#   rating: Int\n#   reviewText: String\n#   reviewDate: Date! @default(expr: \"request.time\")\n# }\n"}]}}
[debug] [2024-12-13T18:00:42.318Z] <<< [apiv2][status] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main 200
[debug] [2024-12-13T18:00:42.319Z] <<< [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:42.333282407Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:42.319Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.319Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.319Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 [none]
[debug] [2024-12-13T18:00:42.397Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 200
[debug] [2024-12-13T18:00:42.397Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:42.333282407Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:42.898Z] [LRO Poller] Retrying task index 0
[debug] [2024-12-13T18:00:42.899Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.899Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.899Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 [none]
[debug] [2024-12-13T18:00:42.987Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 200
[debug] [2024-12-13T18:00:42.987Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16 {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112842061-6292a9bf395c8-dd3739a7-4a670c16","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:42.333282407Z","endTime":"2024-12-13T18:00:42.845330656Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":true,"response":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.Schema","name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","createTime":"2024-12-13T18:00:41.301597760Z","updateTime":"2024-12-13T18:00:42.336070927Z","source":{"files":[{"path":"schema.gql","content":"# # Example schema for simple movie review app\n\n# # Users\n# # Suppose a user can leave reviews for movies\n# # user  -> reviews is a one to many relationship,\n# # movie -> reviews is a one to many relationship\n# # movie <-> user is a many to many relationship\n# type User @table {\n#   id: String! @col(name: \"user_auth\")\n#   username: String! @col(name: \"username\", dataType: \"varchar(50)\")\n#   # The following are generated by the user: User! field in the Review table\n#   # reviews_on_user \n#   # movies_via_Review\n# }\n\n# # Movies\n# type Movie @table {\n#   # The below parameter values are generated by default with @table, and can be edited manually.\n#   # implies directive `@col(name: \"movie_id\")`, generating a column name\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   title: String!\n#   imageUrl: String!\n#   genre: String\n# }\n\n# # Movie Metadata\n# # Movie - MovieMetadata is a one-to-one relationship\n# type MovieMetadata @table {\n#   # @unique indicates a 1-1 relationship\n#   movie: Movie! @unique \n#   # movieId: UUID <- this is created by the above reference\n#   rating: Float\n#   releaseYear: Int\n#   description: String\n# }\n\n# # Reviews\n# type Review @table(name: \"Reviews\", key: [\"movie\", \"user\"]) {\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   user: User!\n#   movie: Movie!\n#   rating: Int\n#   reviewText: String\n#   reviewDate: Date! @default(expr: \"request.time\")\n# }\n"}]},"uid":"bad3ca36-4351-40f8-adf0-435dd972f13c","reconciling":false,"datasources":[{"postgresql":{"database":"postgres","cloudSql":{"instance":"projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"},"schemaValidation":"COMPATIBLE"}}],"etag":"_PNUwaWEE1UtdvHdoX8itwbQIsrUwekbYTMYmgzrhyg"}}
[debug] [2024-12-13T18:00:42.988Z] Database schema was up to date for fdc-sql:postgres
[debug] [2024-12-13T18:00:42.988Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.988Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:42.988Z] >>> [apiv2][query] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main allowMissing=true&validateOnly=false
[debug] [2024-12-13T18:00:42.988Z] >>> [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","datasources":[{"postgresql":{"database":"postgres","cloudSql":{"instance":"projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"},"schemaValidation":"STRICT"}}],"source":{"files":[{"path":"schema.gql","content":"# # Example schema for simple movie review app\n\n# # Users\n# # Suppose a user can leave reviews for movies\n# # user  -> reviews is a one to many relationship,\n# # movie -> reviews is a one to many relationship\n# # movie <-> user is a many to many relationship\n# type User @table {\n#   id: String! @col(name: \"user_auth\")\n#   username: String! @col(name: \"username\", dataType: \"varchar(50)\")\n#   # The following are generated by the user: User! field in the Review table\n#   # reviews_on_user \n#   # movies_via_Review\n# }\n\n# # Movies\n# type Movie @table {\n#   # The below parameter values are generated by default with @table, and can be edited manually.\n#   # implies directive `@col(name: \"movie_id\")`, generating a column name\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   title: String!\n#   imageUrl: String!\n#   genre: String\n# }\n\n# # Movie Metadata\n# # Movie - MovieMetadata is a one-to-one relationship\n# type MovieMetadata @table {\n#   # @unique indicates a 1-1 relationship\n#   movie: Movie! @unique \n#   # movieId: UUID <- this is created by the above reference\n#   rating: Float\n#   releaseYear: Int\n#   description: String\n# }\n\n# # Reviews\n# type Review @table(name: \"Reviews\", key: [\"movie\", \"user\"]) {\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   user: User!\n#   movie: Movie!\n#   rating: Int\n#   reviewText: String\n#   reviewDate: Date! @default(expr: \"request.time\")\n# }\n"}]}}
[debug] [2024-12-13T18:00:43.361Z] <<< [apiv2][status] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main 200
[debug] [2024-12-13T18:00:43.362Z] <<< [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:43.374517899Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:43.362Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:43.362Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:43.363Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be [none]
[debug] [2024-12-13T18:00:43.438Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be 200
[debug] [2024-12-13T18:00:43.439Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:43.374517899Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:43.941Z] [LRO Poller] Retrying task index 0
[debug] [2024-12-13T18:00:43.941Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:43.942Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:43.942Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be [none]
[debug] [2024-12-13T18:00:44.019Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be 200
[debug] [2024-12-13T18:00:44.020Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112843094-6292a9c035a57-d7ecb1d6-8ad6e8be","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:43.374517899Z","endTime":"2024-12-13T18:00:43.924015338Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":true,"response":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.Schema","name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/schemas/main","createTime":"2024-12-13T18:00:41.301597760Z","updateTime":"2024-12-13T18:00:43.377936801Z","source":{"files":[{"path":"schema.gql","content":"# # Example schema for simple movie review app\n\n# # Users\n# # Suppose a user can leave reviews for movies\n# # user  -> reviews is a one to many relationship,\n# # movie -> reviews is a one to many relationship\n# # movie <-> user is a many to many relationship\n# type User @table {\n#   id: String! @col(name: \"user_auth\")\n#   username: String! @col(name: \"username\", dataType: \"varchar(50)\")\n#   # The following are generated by the user: User! field in the Review table\n#   # reviews_on_user \n#   # movies_via_Review\n# }\n\n# # Movies\n# type Movie @table {\n#   # The below parameter values are generated by default with @table, and can be edited manually.\n#   # implies directive `@col(name: \"movie_id\")`, generating a column name\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   title: String!\n#   imageUrl: String!\n#   genre: String\n# }\n\n# # Movie Metadata\n# # Movie - MovieMetadata is a one-to-one relationship\n# type MovieMetadata @table {\n#   # @unique indicates a 1-1 relationship\n#   movie: Movie! @unique \n#   # movieId: UUID <- this is created by the above reference\n#   rating: Float\n#   releaseYear: Int\n#   description: String\n# }\n\n# # Reviews\n# type Review @table(name: \"Reviews\", key: [\"movie\", \"user\"]) {\n#   id: UUID! @default(expr: \"uuidV4()\")\n#   user: User!\n#   movie: Movie!\n#   rating: Int\n#   reviewText: String\n#   reviewDate: Date! @default(expr: \"request.time\")\n# }\n"}]},"uid":"bad3ca36-4351-40f8-adf0-435dd972f13c","reconciling":false,"datasources":[{"postgresql":{"database":"postgres","cloudSql":{"instance":"projects/fredzqm-staging/locations/us-central1/instances/fdc-sql"},"schemaValidation":"STRICT"}}],"etag":"elujxxDaJvmJ2GwB3zb8oKLels2Hwyk-Jpl20EKdHd0"}}
[info] i  dataconnect: Schemas deployed. 
[debug] [2024-12-13T18:00:44.022Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.022Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.022Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors pageSize=100&pageToken=&fields=
[debug] [2024-12-13T18:00:44.119Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors 200
[debug] [2024-12-13T18:00:44.120Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors {}
[info] i  dataconnect: Deploying connectors... 
[debug] [2024-12-13T18:00:44.121Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.121Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.121Z] >>> [apiv2][query] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default?allow_missing=true [none]
[debug] [2024-12-13T18:00:44.121Z] >>> [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default?allow_missing=true {"name":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default","source":{"files":[{"path":"mutations.gql","content":"# # Example mutations for a simple movie app\n\n# # Create a movie based on user input\n# mutation CreateMovie(\n#   $title: String!\n#   $genre: String!\n#   $imageUrl: String!\n# ) @auth(level: USER_EMAIL_VERIFIED) {\n#   movie_insert(\n#     data: {\n#       title: $title\n#       genre: $genre\n#       imageUrl: $imageUrl\n#     }\n#   )\n# }\n\n# # Upsert (update or insert) a user's username based on their auth.uid\n# mutation UpsertUser($username: String!) @auth(level: USER) {\n#   user_upsert(\n#     data: {\n#       id_expr: \"auth.uid\"\n#       username: $username\n#     }\n#   )\n# }\n\n# # Add a review for a movie\n# mutation AddReview(\n#   $movieId: UUID!\n#   $rating: Int!\n#   $reviewText: String!\n# ) @auth(level: USER) {\n#   review_upsert(\n#     data: {\n#       userId_expr: \"auth.uid\"\n#       movieId: $movieId\n#       rating: $rating\n#       reviewText: $reviewText\n#       # reviewDate defaults to today in the schema. No need to set it manually.\n#     }\n#   )\n# }\n\n# # Logged in user can delete their review for a movie\n# mutation DeleteReview(\n#   $movieId: UUID!\n# ) @auth(level: USER) {\n#   review_delete(key: { userId_expr: \"auth.uid\", movieId: $movieId })\n# }\n"},{"path":"queries.gql","content":"# # Example queries for a simple movie app.\n\n# # @auth() directives control who can call each operation.\n# # Anyone should be able to list all movies, so the auth level is set to PUBLIC\n# query ListMovies @auth(level: PUBLIC) {\n#   movies {\n#     id\n#     title\n#     imageUrl\n#     genre\n#   }\n# }\n\n# # List all users, only admins should be able to list all users, so we use NO_ACCESS\n# query ListUsers @auth(level: NO_ACCESS) {\n#   users { id, username }\n# }\n\n# # Logged in user can list all their reviews and movie titles associated with the review \n# # Since the query requires the uid of the current authenticated user, the auth level is set to USER\n# query ListUserReviews @auth(level: USER) {\n#   user(key: {id_expr: \"auth.uid\"}) {\n#     id\n#     username\n#     # <field>_on_<foreign_key_field> makes it easy to grab info from another table\n#     # Here, we use it to grab all the reviews written by the user.\n#     reviews: reviews_on_user {\n#       id\n#       rating\n#       reviewDate\n#       reviewText\n#       movie {\n#         id\n#         title\n#       }\n#     }\n#   }\n# }\n\n# # Get movie by id\n# query GetMovieById($id: UUID!) @auth(level: PUBLIC) {\n#   movie(id: $id) {\n#     id\n#     title\n#     imageUrl\n#     genre\n#     metadata: movieMetadata_on_movie {\n#       rating\n#       releaseYear\n#       description\n#     }\n#     reviews: reviews_on_movie {\n#       id\n#       reviewText\n#       reviewDate\n#       rating\n#       user {\n#         id\n#         username\n#       }\n#     }\n#   }\n# }\n\n# # Search for movies, actors, and reviews\n# query SearchMovie(\n#   $titleInput: String\n#   $genre: String\n# ) @auth(level: PUBLIC) {\n#   movies(\n#     where: {\n#       _and: [\n#         { genre: { eq: $genre } }\n#         { title: { contains: $titleInput } }\n#       ]\n#     }\n#   ) {\n#     id\n#     title\n#     genre\n#     imageUrl\n#   }\n# }\n"}]}}
[debug] [2024-12-13T18:00:44.245Z] <<< [apiv2][status] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default?allow_missing=true 200
[debug] [2024-12-13T18:00:44.245Z] <<< [apiv2][body] PATCH https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default?allow_missing=true {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:44.264005592Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:44.246Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.246Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.246Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f [none]
[debug] [2024-12-13T18:00:44.318Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f 200
[debug] [2024-12-13T18:00:44.319Z] <<< [apiv2][body] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f {"name":"projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f","metadata":{"@type":"type.googleapis.com/google.firebase.dataconnect.v1beta.OperationMetadata","createTime":"2024-12-13T18:00:44.264005592Z","target":"projects/fredzqm-staging/locations/us-central1/services/apphosting-onboard-2/connectors/default","verb":"update","requestedCancellation":false,"apiVersion":"v1beta"},"done":false}
[debug] [2024-12-13T18:00:44.823Z] [LRO Poller] Retrying task index 0
[debug] [2024-12-13T18:00:44.824Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.824Z] Checked if tokens are valid: true, expires at: 1734115966570
[debug] [2024-12-13T18:00:44.824Z] >>> [apiv2][query] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f [none]
[debug] [2024-12-13T18:00:44.902Z] <<< [apiv2][status] GET https://firebasedataconnect.googleapis.com/v1beta/projects/fredzqm-staging/locations/us-central1/operations/operation-1734112844243-6292a9c14e334-99eaee62-7e5f7f4f 200
